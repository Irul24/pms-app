{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\crud-app-master\\\\src\\\\components\\\\Dashboard\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = _ref => {\n  _s();\n\n  let {\n    products,\n    selectedProduct,\n    setProducts,\n    setIsEditing\n  } = _ref;\n  const id = selectedProduct.id;\n  const [name, setName] = useState(selectedProduct.nama);\n  const [desc, setDesc] = useState(selectedProduct.deskripsi);\n  const [price, setPrice] = useState(selectedProduct.harga);\n  const [stock, setStock] = useState(selectedProduct.stok);\n\n  const handleUpdate = e => {\n    e.preventDefault();\n\n    if (!name || !desc || !price || !stock) {\n      return Swal.fire({\n        icon: 'error',\n        title: 'Error!',\n        text: 'All fields are required.',\n        showConfirmButton: true\n      });\n    }\n\n    fetch(`http://localhost:5244/api/Product/?id=${id}`, {\n      method: 'PUT',\n      mode: 'cors',\n      body: JSON.stringify({\n        nama: name,\n        deskripsi: desc,\n        harga: price,\n        stok: stock\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      } // setPostId(id);\n\n    }).catch(error => console.error('There was an error!', error)); // const product = {\n    //   id,\n    //   firstName,\n    //   lastName,\n    //   email,\n    //   salary,\n    //   date,\n    // };\n    // for (let i = 0; i < employees.length; i++) {\n    //   if (employees[i].id === id) {\n    //     employees.splice(i, 1, employee);\n    //     break;\n    //   }\n    // }\n\n    localStorage.setItem('employees_data', JSON.stringify(employees));\n    setproducts(products);\n    setIsEditing(false);\n    Swal.fire({\n      icon: 'success',\n      title: 'Updated!',\n      text: `${employee.firstName} ${employee.lastName}'s data has been updated.`,\n      showConfirmButton: false,\n      timer: 1500\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"small-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productName\",\n        children: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"productName\",\n        type: \"text\",\n        name: \"productName\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"desc\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"desc\",\n        type: \"text\",\n        name: \"desc\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Price (Rp)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"price\",\n        type: \"number\",\n        name: \"price\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"stock\",\n        children: \"Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"stock\",\n        type: \"number\",\n        name: \"stock\",\n        value: stock,\n        onChange: e => setStock(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginLeft: '12px'\n          },\n          className: \"muted-button\",\n          type: \"button\",\n          value: \"Cancel\",\n          onClick: () => setIsEditing(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Edit, \"X3nWUQ8a14F6/xjX/6hzY9RjCow=\");\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","Swal","Edit","products","selectedProduct","setProducts","setIsEditing","id","name","setName","nama","desc","setDesc","deskripsi","price","setPrice","harga","stock","setStock","stok","handleUpdate","e","preventDefault","fire","icon","title","text","showConfirmButton","fetch","method","mode","body","JSON","stringify","headers","then","response","data","json","ok","error","message","status","Promise","reject","catch","console","localStorage","setItem","employees","setproducts","employee","firstName","lastName","timer","target","value","marginTop","marginLeft"],"sources":["D:/Project/React/crud-app-master/src/components/Dashboard/Edit.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\n\nconst Edit = ({ products, selectedProduct, setProducts, setIsEditing }) => {\n  const id = selectedProduct.id;\n\n  const [name, setName] = useState(selectedProduct.nama);\n  const [desc, setDesc] = useState(selectedProduct.deskripsi);\n  const [price, setPrice] = useState(selectedProduct.harga);\n  const [stock, setStock] = useState(selectedProduct.stok);\n\n  const handleUpdate = e => {\n    e.preventDefault();\n\n    if (!name || !desc || !price || !stock) {\n      return Swal.fire({\n        icon: 'error',\n        title: 'Error!',\n        text: 'All fields are required.',\n        showConfirmButton: true,\n      });\n    }\n\n    fetch(`http://localhost:5244/api/Product/?id=${id}`, {\n      method: 'PUT',\n      mode: 'cors',\n      body: JSON.stringify({\n        nama: name,\n        deskripsi: desc,\n        harga: price,\n        stok: stock\n      }),\n      headers: {\n         'Content-type': 'application/json',\n      },\n    })\n        .then(async response => {\n            const data = await response.json();\n\n            // check for error response\n            if (!response.ok) {\n                // get error message from body or default to response status\n                const error = (data && data.message) || response.status;\n                return Promise.reject(error);\n            }\n\n            // setPostId(id);\n        })\n        .catch(error => \n            console.error('There was an error!', error)\n        );\n\n    // const product = {\n    //   id,\n    //   firstName,\n    //   lastName,\n    //   email,\n    //   salary,\n    //   date,\n    // };\n\n    // for (let i = 0; i < employees.length; i++) {\n    //   if (employees[i].id === id) {\n    //     employees.splice(i, 1, employee);\n    //     break;\n    //   }\n    // }\n\n    localStorage.setItem('employees_data', JSON.stringify(employees));\n    setproducts(products);\n    setIsEditing(false);\n\n    Swal.fire({\n      icon: 'success',\n      title: 'Updated!',\n      text: `${employee.firstName} ${employee.lastName}'s data has been updated.`,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  };\n\n  return (\n    <div className=\"small-container\">\n      <form onSubmit={handleUpdate}>\n        <h1>Edit Product</h1>\n        <label htmlFor=\"productName\">Product Name</label>\n        <input\n          id=\"productName\"\n          type=\"text\"\n          name=\"productName\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n        <label htmlFor=\"desc\">Description</label>\n        <textarea\n          id=\"desc\"\n          type=\"text\"\n          name=\"desc\"\n          value={desc}\n          onChange={e => setDesc(e.target.value)}\n        />\n        <label htmlFor=\"price\">Price (Rp)</label>\n        <input\n          id=\"price\"\n          type=\"number\"\n          name=\"price\"\n          value={price}\n          onChange={e => setPrice(e.target.value)}\n        />\n        <label htmlFor=\"stock\">Stock</label>\n        <input\n          id=\"stock\"\n          type=\"number\"\n          name=\"stock\"\n          value={stock}\n          onChange={e => setStock(e.target.value)}\n        />\n        <div style={{ marginTop: '30px' }}>\n          <input type=\"submit\" value=\"Update\" />\n          <input\n            style={{ marginLeft: '12px' }}\n            className=\"muted-button\"\n            type=\"button\"\n            value=\"Cancel\"\n            onClick={() => setIsEditing(false)}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Edit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}